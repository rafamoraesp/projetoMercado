// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
require("chromedriver") // <-- não foi gerado automaticamente
// apontamento para o chrome. Ex: Firefox = geckodriver

// Suite de Teste
describe('Comprar Passagem', function() {
  //this.timeout(60000)   // espera implicita / paciencia = 60.000 milisegundos
  let driver            // objeto do Selenium WebDriver
  let vars              // lista para guardar variaveis e informacoes
  
  // Antes de cada teste - Inicialização - Setup carregar as informacoes, tudo que for necessario para carregar o teste
  beforeEach(async function() {
    // Instancia o objeto Selenium WebDriver para controlar o ChromeDriver
    driver = await new Builder().forBrowser('chrome').build()
    driver.manage().setTimeouts({implicit: 60000}) // define a espera
    vars = {}           // inicializa a lista como vazio
  })
  
  // Depois de cada teste - Finalização - TearDown
  afterEach(async function() {
    await driver.quit();    // Destroi o objeto do Selenium WebDriver
  })
  
  // O teste
  it('Comprar Passagem', async function() {
    await driver.get("https://www.blazedemo.com/")  // abre o site alvo - SUT: Software Under Test
    await driver.manage().window().setRect({ width: 1296, height: 696 }) // tamanho da janela
    await driver.findElement(By.name("fromPort")).click() // clica no combo de origem do voo 
    {
      const dropdown = await driver.findElement(By.name("fromPort")) //
      await dropdown.findElement(By.xpath("//option[. = 'São Paolo']")).click()
    }
    await driver.findElement(By.name("toPort")).click()
    {
      const dropdown = await driver.findElement(By.name("toPort"))
      await dropdown.findElement(By.xpath("//option[. = 'Cairo']")).click()
    }
    await driver.findElement(By.css(".btn-primary")).click()
    await driver.findElement(By.css("tr:nth-child(1) .btn")).click()
    await driver.findElement(By.id("cardType")).click()
    {
      const dropdown = await driver.findElement(By.id("cardType"))
      await dropdown.findElement(By.xpath("//option[. = 'American Express']")).click()
    }
    await driver.findElement(By.id("rememberMe")).click()
    await driver.findElement(By.id("inputName")).click()
    await driver.findElement(By.id("inputName")).sendKeys("Juca Pato")
    await driver.findElement(By.css(".control-group:nth-child(2)")).click()
    await driver.findElement(By.css(".btn-primary")).click()
    assert(await driver.findElement(By.css("h1")).getText() == "Thank you for your purchase today!")
    assert(await driver.findElement(By.css("tr:nth-child(3) > td:nth-child(2)")).getText() == "555 USD")
    })
})